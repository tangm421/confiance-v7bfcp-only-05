---------------------------------
http://confiance.sourceforge.net/
---------------------------------


=====
NOTES
=====

This is a brief guide to the compilation of the BFCP libraries,
according to BFCP RFC specifications, and of the main program
that has been made available to test the libraries.

The main files that are both available for the BFCP participant and
BFCP server are main.c, a small list of operations to test all the
options of the BFCP libraries.

This guide has been conceived by installing the applications on
a Linux RedHat Fedora Core 6 or LinuX Ubuntu 6.06 machine, but it
should not give any problem on different distributions.


=====
INDEX
=====

1. Compiling the libraries
2. Executing the libraries
3. Testing the libraries



==========================
1. Compiling the libraries
==========================

There are several available targets to compile the code:

	- 'make linux' will compile the testcode and the
	  library, creating an executable file for Linux;
	- 'make win32' will compile the testcode and the
	  library, creating an executable file for Windows;
	- 'make so' will only compile the library, creating
	  a shared object for Linux;
	- 'make dll' will only compile the library, creating
	  a DLL for Windows.

If you want to compile all the available targets, just use:

	make all

Edit the Makefile according to your settings and compiler.



==========================
2. Executing the libraries
==========================

You can execute the application to test the just compiled
library by writing:

	./bfcp_participant

in the Participant folder, and:

	./bfcp_server

in the Server folder. If you want to exploit the BFCP over TLS
functionality, you'll need to create a certificate file and
a private key for the server. By default the BFCP server will
use 'server.pem' as certificate filename and 'server.key' as
private key filename, and it will look for those file in the
current folder. In case you want to use different files in the
test application, edit the opportune line of code in main.c
to meet your requirements and recompile. No certificates and
keys are currently needed for the participant side.



========================
2. Testing the libraries
========================

A menu option has been made available in both the applications
to test the libraries. Just play with it according to your
needs to learn how the library works and to make tests on
your own.
